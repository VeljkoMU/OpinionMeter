{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { changeCurrentPageAction, changeMostEngagedWithPostsAction, changePostsAction, changeUserAction, changeUserPostsAction } from \"./actions\";\nexport const initialState = {\n  loadedPosts: [],\n  userPosts: [],\n  userData: undefined,\n  pagingData: {\n    currentPage: 1,\n    hasNextPage: false,\n    hasPrevPage: false\n  },\n  mostEngaged: []\n};\nexport const postsReducer = createReducer(initialState, on(changePostsAction, (state, {\n  posts\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    loadedPosts: posts.docs\n  });\n}), on(changeUserPostsAction, (state, {\n  posts\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    userPosts: posts\n  });\n}), on(changeCurrentPageAction, (state, {\n  pagingData\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    pagingData: pagingData\n  });\n}), on(changeMostEngagedWithPostsAction, (state, {\n  posts\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    mostEngaged: posts\n  });\n}), on(changeUserAction, (state, {\n  user\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    userData: user\n  });\n}));","map":null,"metadata":{},"sourceType":"module"}