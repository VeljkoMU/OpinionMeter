{"ast":null,"code":"import { shareReplay } from 'rxjs';\nimport { changeUserAction } from 'src/store/actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@ngrx/store\";\nexport let UserDataManagerService = /*#__PURE__*/(() => {\n  class UserDataManagerService {\n    constructor(httpClient, store) {\n      this.httpClient = httpClient;\n      this.store = store;\n      this.username = \"\";\n      this.password = \"\";\n      this.gender = \"\";\n      this.region = \"\";\n      this.education = \"\";\n      this.employment = \"\";\n    }\n\n    register(password, username, gender, education, emp, region) {\n      let result = this.httpClient.post(\"/userdata/register\", {\n        username: username,\n        password: password,\n        gender: gender,\n        edu: education,\n        emp: emp,\n        region: region\n      }, {\n        observe: \"response\",\n        withCredentials: true\n      }).pipe(shareReplay(1));\n      result.subscribe(response => {\n        if (response.status) {\n          this.username = username;\n          this.password = password;\n          this.store.dispatch(changeUserAction({\n            user: {\n              username: username,\n              gender: gender,\n              education: education,\n              employment: emp,\n              region: region\n            }\n          }));\n        }\n      });\n      return result;\n    }\n\n    confirmCradentials() {\n      const response = this.httpClient.get(\"/userdata/confirmCredentials\", {\n        withCredentials: true\n      }).pipe(shareReplay(1));\n      response.subscribe(res => {\n        if (res.username) {\n          this.getMyAccountData();\n        }\n      });\n    }\n\n    logout() {\n      let result = this.httpClient.get(\"/userdata/logout\", {\n        observe: \"response\",\n        withCredentials: true\n      });\n      result.subscribe(response => {\n        if (response.status) {\n          this.store.dispatch(changeUserAction({\n            user: undefined\n          }));\n        }\n      });\n      return result;\n    }\n\n    login(password, username) {\n      let result = this.httpClient.post(\"/userdata/login\", {\n        username: username,\n        password: password\n      }, {\n        observe: \"response\",\n        withCredentials: true\n      }).pipe(shareReplay(1));\n      result.subscribe(response => {\n        if (response.status) {\n          this.username = username;\n          this.password = password;\n          this.getMyAccountData();\n        }\n      });\n      return result;\n    }\n\n    getMyAccountData() {\n      let results = this.httpClient.get(\"/userdata/getUserData\", {\n        withCredentials: true\n      }).pipe(shareReplay(1));\n      results.subscribe(response => {\n        if (response) {\n          this.username = response.username;\n          this.store.dispatch(changeUserAction({\n            user: {\n              username: response.username,\n              gender: response.gender,\n              education: response.education,\n              employment: response.employment,\n              region: response.region\n            }\n          }));\n        }\n      });\n      return results;\n    }\n\n  }\n\n  UserDataManagerService.ɵfac = function UserDataManagerService_Factory(t) {\n    return new (t || UserDataManagerService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Store));\n  };\n\n  UserDataManagerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserDataManagerService,\n    factory: UserDataManagerService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserDataManagerService;\n})();","map":null,"metadata":{},"sourceType":"module"}